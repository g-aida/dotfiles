[[plugins]]
repo = 'Shougo/dein.vim'

# アイコンを各種プラグインに適用する
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
" NERDTreeの設定
" フォルダ名の先頭にアイコンを付加する
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
" フォルダの開閉によってアイコンを切り替える
let g:DevIconsEnableFoldersOpenClose = 1
'''

[[plugins]]
# 非同期コードチェック
repo = 'w0rp/ale'
hook_add = '''
" ワーニング・エラー間を素早くジャンプ
nmap <silent> [e <Plug>(ale_previous_wrap)
nmap <silent> ]e <Plug>(ale_next_wrap)

" 左端のシンボルカラムを表示したままにする
let g:ale_sign_column_always = 1
" シンボルを変更する
let g:ale_sign_error   = ''
let g:ale_sign_warning = ''
'''

# [[plugins]]
# repo = 'Shougo/defx.nvim'

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# hook_add = 'let g:deoplete#enable_at_startup = 1'

# 検索・置換コマンドを賢くする
[[plugins]]
repo = 'tpope/vim-abolish'

# # True Color対応のカラースキーム
# [[plugins]]
# repo = 'jacoborus/tender.vim'
# hook_add = '''
# if (has("termguicolors"))
# 	set termguicolors
# endif
# syntax enable
# colorscheme tender
# '''

# レトロなカラースキーム
[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
if (has("termguicolors"))
	set termguicolors
endif
syntax enable
colorscheme gruvbox
'''

# Emmet記法で爆速開発
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
let g:user_emmet_install_global = 0
autocmd FileType html,css EmmetInstall
'''

# カレントディレクトリのファイル一覧を表示
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
" <C-e>でツリーを開く
nnoremap <silent><C-e> :<C-u>NERDTreeToggle<CR>

" ブックマークを初期表示
let g:NERDTreeShowBookmarks=1

" 隠しファイルを表示する
let NERDTreeShowHidden = 1

" Vimを起動したときに自動でNERDTreeを表示
" autocmd vimenter * NERDTree

" ファイル名が指定された状態でVimが起動された場合はNERDTreeを起動しない
" autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" 他のバッファをすべて閉じたときにNERDTreeが開いていたらNERDTreeも一緒に閉じる
autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" ディレクトリ表示記号を変更する
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable  = '▶'
let g:NERDTreeDirArrowCollapsible = '▼'

'''

# タブページ使用時にNERDTreeを便利にする
[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
" NERDTreeToggleの代わりにNERDTreeTabsToggleを呼ぶようにする
" nnoremap <silent><C-e> :<C-u><Plug>NERDTreeTabsToggle<CR>
map <C-e> <Plug>NERDTreeTabsToggle<CR>
let g:nerdtree_tabs_open_on_gui_startup = 0
'''

# NERDTreeのシンタックスハイライト
[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
" アイコンだけでなくファイル名もハイライトする
let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1

" フォルダをハイライトする
let g:NERDTreeHighlightFolders = 1
let g:NERDTreeHighlightFoldersFullName = 1

" ファイルアイコン
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['html'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['css']  = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['md']   = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['vim']  = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.gitignore'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.gitconfig'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.vimrc']     = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['.gvimrc']    = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['_vimrc']     = ''
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['_gvimrc']    = ''
let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols['.*vimrc.*'] = ''
'''

# 複数行コメントアウト
[[plugins]]
repo = 'tomtom/tcomment_vim'

# surround関連の編集
[[plugins]]
repo =  'tpope/vim-surround'

# ヴィジュアルモードで選択した文字列を検索
[[plugins]]
repo = 'thinca/vim-visualstar'

# インデントガイド
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# 複数カーソル
[[plugins]]
repo = 'terryma/vim-multiple-cursors'

# ステータスラインをいい感じにする
[[plugins]]
repo = 'itchyny/lightline.vim'
depends = [
	# 'jacoborus/tender.vim',
	'morhetz/gruvbox',
	'maximbaz/lightline-ale'
]
hook_add = '''
let g:lightline = {
	\	'colorscheme': 'jellybeans',
	\	'mode_map': {'c': 'NORMAL'},
	\	'active': {
	\		'left': [
	\			['mode', 'paste'],
	\			['fugitive', 'filename', 'ale'],
	\		],
	\		'right': [
	\			['linter_checking',	'linter_errors', 'linter_warnings', 'linter_ok' ],
	\			['lineinfo'],
	\			['percent'],
	\			['fileformat', 'fileencoding', 'filetype'],
	\		],
	\	},
	\	'component': {
	\		'lineinfo':	    '%3l/%L:%-2v',
	\	},
	\	'component_function': {
	\		'modified':	    'LightlineModified',
	\		'readonly':     'LightlineReadonly',
	\		'fugitive':     'LightlineFugitive',
	\		'filename':     'LightlineFilename',
	\		'fileformat':   'LightlineFileformat',
	\		'filetype':     'LightlineFiletype',
	\		'fileencoding': 'LightlineFileencoding',
	\		'mode':         'LightlineMode',
	\	},
    \	'separator': {
	\		'left': '', 'right': '',
	\	},
    \	'subseparator': {
	\		'left': '', 'right': '',
	\	},
	\ }

"	\		'left': '', 'right': '',
"	\		'left': '', 'right': '',
"	\		'left': '', 'right': '',
"	\		'left': '', 'right': '',
"	\		'left': '', 'right': '',
"	\		'left': '', 'right': '',

function! LightlineModified()
	return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
endfunction

function! LightlineReadonly()
	return &ft !~? 'help\|vimfiler\|gundo' && &readonly ? 'x' : ''
endfunction

function! LightlineFilename()
	return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
		\ (&ft == 'vimfiler' ? vimfiler#get_status_string() :
		\  &ft == 'unite' ? unite#get_status_string() :
		\  &ft == 'vimshell' ? vimshell#get_status_string() :
		\ '' != expand('%:t') ? expand('%:t') : '[No Name]') .
		\ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
endfunction

function! LightlineFugitive()
	if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
		return fugitive#head()
	else
		return ''
	endif
endfunction

function! LightlineFileformat()
	return winwidth(0) > 70 ? &fileformat : ''
endfunction

function! LightlineFiletype()
	return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
endfunction

function! LightlineFileencoding()
	return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
endfunction

function! LightlineMode()
	return winwidth(0) > 60 ? lightline#mode() : ''
endfunction
'''

# ALEによるメッセージをlightlineステータスラインに表示する
[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = [
	'itchyny/lightline.vim'
	'w0rp/ale',
]
hook_add = '''
let g:lightline.component_expand = {
	\		'linter_checking': 'lightline#ale#checking',
	\		'linter_errors':   'lightline#ale#errors',
	\		'linter_warnings': 'lightline#ale#warnings',
	\		'linter_ok':       'lightline#ale#ok',
	\	}
let g:lightline.component_type = {
	\		'linter_checking': 'left',
	\		'linter_errors':   'error',
	\		'linter_warnings': 'warning',
	\		'linter_ok':       'left',
	\	}
" アイコンを変更
let g:lightline#ale#indicator_checking = ''
let g:lightline#ale#indicator_errors   = ''
let g:lightline#ale#indicator_warnings = ''
let g:lightline#ale#indicator_ok       = ''

" メッセージのフォーマットを変更する
let g:ale_echo_msg_format = '[%linter%] %s'
'''

# ステータスラインをかっこよく
# [[plugins]]
# repo = 'vim-airline/vim-airline'

# ソースコード中のカラーをプレビューする
[[plugins]]
repo = 'ap/vim-css-color'

# 行末の不要な空白文字を可視化
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# .tomlファイルのシンタックス
[[plugins]]
repo = 'cespare/vim-toml'

# ファイルをあいまい検索
[[plugins]]
repo = 'kien/ctrlp.vim'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo = 'roxma/nvim-yarp'
on_if = '!has("nvim")'

# APIドキュメントを参照する
[[plugins]]
repo = 'thinca/vim-ref'

# Vimチートシートを別ペインで表示する
[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
let g:cheatsheet#cheat_file = '$HOME/.vim_cheatsheet.md'
'''

# モード変更時にIME状態を自動で切り替える
# [[plugins]]
# repo = 'pepo-le/win-ime-con.nvim'
# on_event = 'VimEnter'
# hook_source = '''
# g:win_ime_con_mode = 0
# '''

# ランダムな時刻をINSERTする
[[plugins]]
repo = 'kebiishi/random-date'

# ディレクトリごとに設定ファイルを用意する
[[plugins]]
repo =  'thinca/vim-localrc'
